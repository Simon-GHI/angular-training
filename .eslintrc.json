/*
 * Configuration made on the basis of the Airbnb rules + Angular ESLint + Prettier
 * Rules that are not compatible with typescript and/or Angular specifications have been overrides (Angular Airbnb configuration used as a base: https://github.com/efoken/eslint-config-airbnb-angular)
 *
 * Important : Activating or deactivating a rule must be considered and validated by all developers.
 * Do not disable a rule in order to work around certain errors that could be fixed.
 */
{
  "root": true,
  "globals": {
    "document": true,
    "window": true,
    "localStorage": true
  },
  "ignorePatterns": ["projects/**/*", "main.ts", "polyfills.ts", "test.ts"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "airbnb-base",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        // Extends Prettier plugin to avoid conflicts between ESLint & Prettier configuration (".prettierrc.json")
        "plugin:prettier/recommended"
      ],
      "rules": {
        /*
         * Override ESLint (from 'airbnb-base')
         * ESLint: https://eslint.org/docs/rules/
         */
        "no-unused-vars": "off",
        "no-useless-constructor": "off",
        "no-use-before-define": "off",
        "class-methods-use-this": "off",
        "dot-notation": "off",
        "no-empty-function": [
          "error",
          { "allow": ["constructors", "arrowFunctions"] }
        ],
        "no-underscore-dangle": ["error", { "allowAfterThis": true }],
        "no-plusplus": "off",
        "quotes": [
          "error",
          "single",
          {
            "avoidEscape": true,
            "allowTemplateLiterals": true
          }
        ],
        "curly": ["error"],
        "no-console": "error",
        "no-shadow": "off",

        /* Override Import plugin (from 'airbnb-base') rules that are not compatible with typescript rules defined below and/or Angular specifications
         * Import plugin: https://github.com/import-js/eslint-plugin-import
         */
        "import/no-unresolved": "off",
        "import/prefer-default-export": "off",
        "import/no-extraneous-dependencies": "off",

        /* Override Angular ESLint (from '@angular-eslint') rules
         * Angular-ESLint : https://github.com/angular-eslint/angular-eslint
         */
        "@typescript-eslint/dot-notation": ["error"],
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/member-delimiter-style": "error",
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": [
              "public-field",
              "private-field",
              "constructor",
              "public-method",
              "private-method"
            ]
          }
        ],
        "@typescript-eslint/no-array-constructor": "error",
        "@typescript-eslint/no-empty-interface": [
          "error",
          {
            "allowSingleExtends": true
          }
        ],
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-unused-vars": [
          "error",
          { "vars": "all", "args": "none", "ignoreRestSiblings": true }
        ],
        "@typescript-eslint/no-use-before-define": "error",
        "@typescript-eslint/no-useless-constructor": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/no-shadow": ["error"],

        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": ["element", "attribute"],
            "prefix": ["app"],
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/component-class-suffix": [
          "error",
          {
            "suffixes": ["Component", "View", "Modal"]
          }
        ]
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {}
    },
    {
      "files": ["*.component.html"],
      "excludedFiles": ["*inline-template-*.component.html"],
      "extends": ["plugin:prettier/recommended"],
      "rules": {
        "prettier/prettier": ["error", { "parser": "angular" }]
      }
    }
  ]
}
